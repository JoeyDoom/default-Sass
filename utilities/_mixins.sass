// ==========================================================================
// Mixins
// ==========================================================================

// Image replacement

@mixin img-replace($img, $w, $h, $disp: block)
	background-image: url('#{$path}/#{$img}')
	background-repeat: no-repeat
	width: $w
	height: $h
	display: $disp


// Media Queries

@mixin mq($break)
	@if $break == "small"
		@media (min-width: $breakpoint-sm) and (max-width: $breakpoint-md)
			@content
	@else if $break == "medium"
		@media (min-width: $breakpoint-md + 1)
			@content
	@else if $break == "large"
		@media (min-width: $breakpoint-lg)
			@content
	@else
		@error "That's not a valid breakpoint value idiot"

//UI Color Background Theme

@mixin bg-colors($map)
	@each $theme, $color in $map
		&--#{$theme}
			background-color: $color

// Adjacent sibling margins

@mixin doubly ($margin: 1em)
	& + &
		margin-left: $margin
		@content

// Grid Columns

@mixin g-columns
	@for $i from 1 through $g-col-count

			$context: g-context($g-col-width, $g-col-count, $g-gutter-width) !global
			$target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1))
			
			// Generate column modifier classes
			&--#{$i}
				width: percentage($target / $context)